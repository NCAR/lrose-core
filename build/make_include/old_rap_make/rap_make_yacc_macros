# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
# ** Copyright UCAR (c) 1992 - 2010 
# ** University Corporation for Atmospheric Research(UCAR) 
# ** National Center for Atmospheric Research(NCAR) 
# ** Research Applications Laboratory(RAL) 
# ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
# ** 2010/10/7 16:53:3 
# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
###########################################################
#
# rap_make_yacc_macros
#
# macros to be included for using yacc
#
# Dave Albo
#
# RAP,NCAR,Boulder,Colorado,80307,USA
#
# June 2005
#
# Design:
#
#   yacc reads ".y" files and creates .cc and .hh or .h  files.
#   This design creates files a.cc and a.hh (or a.h) from file a.y.
#
#   The user must specify values for 3 variables:
#
#     YACC_SRCS = One or more files with ".y" suffix.
#     YACC_INC_DEST = <dir>
#        The include files are created in this directory.
#        The two most common choices would be:
#             YACC_INC_DEST = ../include/<libname>
#             YACC_INC_DEST = .
#     YACC_SUFFIX = <s>
#
#        The include files created ends in .<s>.  
#        The two most common choices would be:
#             YACC_SUFFIX = h
#             YACC_SUFFIX = hh
#
#   You must include these files:
#
#     rap_make_yacc_macros
#     rap_make_yacc_targets 
#
#   To compile the generated .cc file(s), the user must also indicate
#   $(YACC_CPPC_SRCS) somewhere, which is the list of names of the
#   generated .cc files.
#
#   Example, to make a library that has 2 yacc files a.y and b.y for
#   library toolsz which also has another file mycode.cc in it, you need:
#
#      YACC_SRCS = a.y b.y
#      YACC_INC_DEST = ../include/toolsz
#      CPPC_SRCS = \
#            $(YACC_CPPC_SRCS) mycode.cc
#
#      include $(RAP_MAKE_INC_DIR)/rap_make_yacc_macros
#      include $(RAP_MAKE_INC_DIR)/rap_make_targets
#      include $(RAP_MAKE_INC_DIR)/rap_make_yacc_targets
#
#
#   If one does:
#
#      make
#
#   the $(YACC_CPPC_SRCS) will get created and compiled. One can also do:
#
#      make clean_yacc
#
#   which removes all files generated by yacc.
#
#
############################################################


YACC_CPPC_HDRS = $(YACC_SRCS:.y=.$(YACC_SUFFIX))
YACC_CPPC_SRCS = $(YACC_SRCS:.y=.cc)
YACC_CPPC_OUTPUT = $(YACC_SRCS:.y=.output) $(YACC_TEMPNAME).output

