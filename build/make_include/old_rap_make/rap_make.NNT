# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
# ** Copyright UCAR (c) 1992 - 2010 
# ** University Corporation for Atmospheric Research(UCAR) 
# ** National Center for Atmospheric Research(NCAR) 
# ** Research Applications Laboratory(RAL) 
# ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
###########################################################
#
# Macros for NSAP's RHEL code base
# Adopted from rap_make.LINUX_64_wheezy
#
############################################################

#
# system utilities
#

SHELL = /bin/sh
RM = /bin/rm -f
MV = /bin/mv -f
CP = /bin/cp
CP_DIR = /bin/cp -r
MKDIR = /bin/mkdir -p
TEST = /usr/bin/test
PERL = /usr/bin/perl
AWK = /usr/bin/awk
DATE = date -u
PWD = pwd

#
# includes
#

SYS_INCLUDES =
SYS_X_INCLUDES = -I/usr/include/X11
SYS_XVIEW_INCLUDES =

#
# LD_LIBRARY_PATH
#

SYS_LD_LIBRARY_PATH =

#
# lint
#

LINT = alint
LINTFILTER = $(RAP_MAKE_BIN_DIR)/lint_filter.$(HOST_OS)
SYS_LINTFLAGS = -aux -DLINT -D$(HOST_OS)

#
# cppcheck
#
SYS_CPPCHECKFLAGS=$(LOC_INCLUDES) -d $(RAP_INC_DIR) -d $(RAP_SHARED_INC_DIR)
SYS_CPPCHECKFLAGS2=-I$(LOC_INC_DIR)

#
# compile
#

# gcc
#
CC = gcc
SYS_CFLAGS = $(GCC_WARNINGS) -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 $(MY_CFLAGS)
PROFILE_FLAG = -pg
DEBUG_FLAG = -g
OPT_FLAG = -O2

# pgc

PGI_CC = pgcc
PGI_SYS_CFLAGS = -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 -Minform,severe -silent $(MY_PGI_CFLAGS)

# intel c

INTEL_CC = icc
INTEL_SYS_CFLAGS = -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 $(MY_INTEL_CFLAGS)

#
# cc
#

SYS_CPPC_CFLAGS = $(SYS_CFLAGS) $(MY_CPPC_CFLAGS) 
CPPC = g++
SYS_CPPC_INCLUDES =
ACC = $(CC)

PGI_CPPC = pgCC
PGI_SYS_CPPC_CFLAGS = -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 -Minform=severe -silent -fPIC $(MY_PGI_CPPC_CFLAGS)

INTEL_CPPC = icc
INTEL_SYS_CPPC_CFLAGS = -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 $(MY_INTEL_CPPC_CFLAGS)

# fortran
FC = gfortran
F90C = gfortran
F95C = gfortran

F90FLAGS=$(MY_F90FFLAGS) $(LOC_F90FFLAGS)

PGI_F90C=pgf90
PGI_FC=pgf90
PGI_F95C=pgf95
SYS_PGI_FFLAGS=-DLITENDIAN $(MY_PGI_FFLAGS)

INTEL_F90C = ifort
INTEL_FC = ifort
INTEL_F95C = ifort
SYS_INTEL_FFLAGS=$(MY_INTEL_FFLAGS)

# Compile -- special for C <-> FORTRAN
# The "NATIVE" compilers need to be either both GNU or both
# non-GNU for these compiles to work. If you use GNU, then
# the USE_GNU_F2C must be set to "-DUSE_GNU_F2C" (no quotes).

NATIVE_CC = gcc
NATIVE_FC = gfortran
NATIVE_LIB_DIR = 
F_TO_C_LIBS = -lg2c
USE_GNU_F2C = -DUSE_GNU_F2C
SYS_FFLAGS = -DLITENDIAN $(MY_FFLAGS)

#
# link
#

STATIC_FLAG=-static
SYS_LIBS = 
SYS_CPPC_LIBS =
# Don't include -lXm, -lXpm as it fails with the libc6 version of libX11
SYS_X_LIBS = -lXext -lXt -lX11 -lSM -lICE
SYS_LDFLAGS = -L/usr/lib64 $(MY_LDFLAGS)
SYS_CPPC_LDFLAGS = -L/usr/lib64 $(MY_CPPC_LDFLAGS)
SYS_X_LDFLAGS = -L/usr/lib/X11
SYS_F_LDFLAGS = $(MY_F_LDFLAGS)
SYS_XVIEW_LDFLAGS =
SYS_MOTIF_LDFLAGS = 
SYS_MOTIF_LIBS = -lXm -lXp -lXext 
LEX_LIB = -ll
YACC_LIB =
SYS_UCB_LIBS =
SYS_UCB_LDFLAGS =

#
# Archiving libs
#

AR = ar
ARFLAGS = rv
RANLIB = na
HAVE_RANLIB=FALSE

#
# yacc and lex
#

YACC = yacc
LEX = lex
SYS_YACCFLAGS = -d -t -v
SYS_LEXFLAGS = 

# NCAR Graphics
#   NCG_INC_DIR defines location of NCAR Graphics include files
#   NCG_LIB_DIR defines location of NCAR Graphics libraries
#   NCAR_CC     defines name of script to do NCAR Graphics links
#   NCAR_CPPC   defines name of script to do NCAR Graphics links

NNT_NCG=/opt/ncl
NCG_INC_DIR=-I$(NNT_NCG)/include
NCG_LIB_DIR=-L$(NNT_NCG)/lib
NCAR_CC=ncargcc
NCAR_CPPC=ncarg++

# netCDF - The NNT environment does not have include all the versions
#          of netCDF that are installed and supported under Debian
# Important: netCDF 4 has an implicit dependency
#            on HDF5, udunits2, and zlib that was not the case in netCDF 3
# Most importantly, the linker will make use of RUN_PATH over RPATH
# as a result of the --enable-new-dtags option
# to allow developers to override library locations for their own local development

NNT_SZIP=/opt/szip
SZIP_INCLUDES=$(MY_SZIP_INCS) -I$(NNT_SZIP)/include
SZIP_LDFLAGS=$(MY_SZIP_LDFLAGS) -L$(NNT_SZIP)/lib -Wl,-rpath,$(NNT_SZIP)/lib,--enable-new-dtags
SZIP_LIBS=$(MY_SZIP_LIBS) -lsz

NNT_UDNT2=/opt/udunits2
UDUNITS_INCS=$(MY_UDUNITS_INCS) -I$(NNT_UDNT2)/include
UDUNITS_LDFLAGS=$(MY_UDUNITS_LDFLAGS) -L$(NNT_UDNT2)/lib -Wl,-rpath,$(NNT_UDNT2)/lib,--enable-new-dtags
UDUNITS_LIBS=$(MY_UDUNITS_LIBS) -ludunits2

NNT_HDF5=/opt/hdf5
HDF5_INCLUDES=$(MY_HDF5_INCS) -I$(NNT_HDF5)/include  $(SZIP_INCLUDES)
HDF5_LDFLAGS=$(MY_HDF5_LDFLAGS) -L$(NNT_HDF5)/lib $(SZIP_LDFLAGS) -Wl,-rpath,$(NNT_HDF5)/lib,--enable-new-dtags

NNT_NCDF=/opt/netcdf
NETCDF_INCS=$(MY_NETCDF_INCS) -I$(NNT_NCDF)/include $(HDF5_INCLUDES) $(UDUNITS_INCS)
NETCDF_LDFLAGS=$(MY_NETCDF_LDFLAGS) -L$(NNT_NCDF)/lib $(HDF5_LDFLAGS) $(UDUNITS_LDFLAGS) -Wl,-rpath,$(NNT_NCDF)/lib,--enable-new-dtags
NETCDF4_INCS=$(MY_NETCDF4_INCS) -I$(NNT_NCDF)/include $(HDF5_INCLUDES) $(UDUNITS_INCS)
NETCDF4_LDFLAGS=$(MY_NETCDF4_LDFLAGS) -L$(NNT_NCDF)/lib $(HDF5_LDFLAGS) $(UDUNITS_LDFLAGS) -Wl,-rpath,$(NNT_NCDF)/lib,--enable-new-dtags

NNT_PGI_NCDF=/opt/netcdf-pgi
PGI_NETCDF_INCS=$(MY_PGI_NETCDF_INCS) -I$(NNT_PGI_NCDF)/include $(HDF5_INCLUDES) $(UDUNITS_INCS)
PGI_NETCDF_LDFLAGS=$(MY_PGI_NETCDF_LDFLAGS) -L$(NNT_PGI_NCDF)/lib $(HDF5_LDFLAGS) $(UDUNITS_LDFLAGS) -Wl,-rpath,$(NNT_PGI_NCDF)/lib,--enable-new-dtags

NETCDF_C_LIB=-lnetcdf
NETCDF_C++_LIB=-lnetcdf_c++
NETCDF_FF_LIB=-lnetcdff
NETCDF_C_AND_C++_LIBS= -lnetcdf_c++ -lnetcdf
NETCDF_C_AND_F_LIBS=-lnetcdff -lnetcdf
NETCDF3_LIB_LIST=
NETCDF4_LIBS=-lNcxx -lnetcdf_c++ -lnetcdf -lhdf5_hl_cpp -lhdf5_cpp -lhdf5_hl -lhdf5 -lsz -ludunits2
NETCDF_LIB_LIST=$(NETCDF4_LIBS)
NETCDF_LIBS=$(NETCDF4_LIBS)
NETCDF_INCLUDES=$(NETCDF4_INCS)
NETCDF_LDFLAGS=$(NETCDF4_LDFLAGS)

#
# Jasper
#

JASPER_INCLUDES = -I/usr/local/jasper/include
JASPER_LDFLAGS = -L/usr/local/jasper/lib
JASPER_LIBS = -ljasper

# MADIS
# These have the MY_MADIS_LIBS first intentionally.

#MADIS_LIBS = $(MY_MADIS_LIBS) /opt/madis-gcc/lib/madislib.a
MADIS_LIBS = $(MY_MADIS_LIBS)
PGI_MADIS_LIBS = $(MY_PGI_MADIS_LIBS) /opt/madis-pgi/lib/madislib.a
INTEL_MADIS_LIBS = $(MY_INTEL_MADIS_LIBS) /opt/madis-intel/lib/madislib.a 

