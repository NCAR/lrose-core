# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
# ** Copyright UCAR (c) 1992 - 2010 
# ** University Corporation for Atmospheric Research(UCAR) 
# ** National Center for Atmospheric Research(NCAR) 
# ** Research Applications Laboratory(RAL) 
# ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
# ** 2010/10/7 16:53:3 
# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
###########################################################
#
# Macros for MAC OSX 64-bit (Intel) machines
#
# Mike Dixon 
#
# EOL,NCAR,Boulder,Colorado,80307,USA
#
############################################################

#
# system utilities
#

SHELL = /bin/sh
RM = /bin/rm -f
MV = /bin/mv -f
CP = /bin/cp
CP_DIR = /bin/cp -r
MKDIR = /bin/mkdir -p
TEST = /bin/test
PERL = /usr/bin/perl
AWK = /usr/bin/awk
PWD = pwd
DATE = date -u

#
# includes
#

#SYS_INCLUDES = -I/usr/include -I/usr/include/sys
SYS_X_INCLUDES = -I/usr/X11R6/include  -I/sw/include -I/opt/X11/include
SYS_XVIEW_INCLUDES =

#
# LD_LIBRARY_PATH
#

SYS_LD_LIBRARY_PATH =

#
# lint - no lint
#

#
# compile
#

# gcc
#
CC = gcc
SYS_CFLAGS = $(GCC_WARNINGS) -D$(HOST_OS) -D_BSD_TYPES -DF_UNDERSCORE2 $(MY_CFLAGS)
PROFILE_FLAG = -pg
DEBUG_FLAG = -g 
OPT_FLAG = -g

#
# cc
#

SYS_CPPC_CFLAGS = $(SYS_CFLAGS) $(MY_CPPC_CFLAGS) 
CPPC = g++
SYS_CPPC_INCLUDES =
ACC = $(CC)

# fortran

FC = gfortran
F90C = gfortran
F95C = gfortran

# Compile -- special for C <-> FORTRAN
# The "NATIVE" compilers need to be either both GNU or both
# non-GNU for these compiles to work. If you use GNU, then
# the USE_GNU_F2C must be set to "-DUSE_GNU_F2C" (no quotes).

NATIVE_CC = gcc
NATIVE_FC = gfortran
NATIVE_LIB_DIR = 
F_TO_C_LIBS = -lf2c
USE_GNU_F2C = -DUSE_GNU_F2C
SYS_FFLAGS = -DLITENDIAN

#
# link
#

STATIC_FLAG=-static
SYS_LIBS = 
SYS_CPPC_LIBS =
# Don't include -lXm, -lXpm as it fails with the libc6 version of libX11
SYS_X_LIBS = -lXext -lXt -lX11 -lSM -lICE
SYS_LDFLAGS =
SYS_CPPC_LDFLAGS =
SYS_X_LDFLAGS = -L/usr/X11R6/lib -L/sw/lib -L/opt/X11/lib
SYS_F_LDFLAGS =
SYS_XVIEW_LDFLAGS =
SYS_MOTIF_LDFLAGS = 
SYS_MOTIF_LIBS = -lXm -lXp -lXext 
LEX_LIB = -ll
YACC_LIB =
SYS_UCB_LIBS =
SYS_UCB_LDFLAGS =

#
# Expect/TCL stuff
#

EXPECT_INCLUDES = -I/usr/include/tcl
EXPECT_LIBS = -lexpect -ltcl -lutil -ldl

#
# Archiving libs
#

AR = ar
ARFLAGS = rv
RANLIB = ranlib
HAVE_RANLIB=TRUE

#
# yacc and lex
#

YACC = yacc
LEX = lex

# NCAR Graphics
#	NCG_INC_DIR	defines location of NCAR Graphics include files
#	NCG_LIB_DIR	defines location of NCAR Graphics libraries
#	NCAR_CC		defines name of script to do NCAR Graphics links
#	NCAR_CPPC	defines name of script to do NCAR Graphics links

NCG_INC_DIR=-I/usr/local/ncarg/include
NCG_LIB_DIR=-L/usr/local/ncarg/lib
NCAR_CC=ncargcc
NCAR_CPPC=ncarg++

# netCDF - note that your environment may not have all the listed versions
#          of netCDF installed. The need for both default netCDF and netCDF 4
#          is driven by the current mix of some apps using the default and
#          some using netCDF 4.
#	NETCDF_INCS	defines location of default netCDF include files
#	NETCDF_LDFLAGS	defines location of default netCDF libraries
#       NETCDF4_INCS defines location of netCDF 4 include files
#       NETCDF4_LDFLAGS defines location of netCDF 4 libraries

NETCDF_INCS=$(MY_NETCDF_INCS) -I/usr/local/netcdf/include
NETCDF_LDFLAGS=$(MY_NETCDF_LDFLAGS) -L/usr/local/netcdf/lib
NETCDF4_INCS=$(MY_NETCDF4_INCS)
NETCDF4_LDFLAGS=$(MY_NETCDF4_LDFLAGS)

NETCDF_C_LIB=-lnetcdf
NETCDF_C++_LIB=-lnetcdf_c++
NETCDF_FF_LIB=-lnetcdff
NETCDF_C_AND_C++_LIBS=-lnetcdf
NETCDF_C_AND_F_LIBS=-lnetcdff -lnetcdf
NETCDF4_LIBS=-lNcxx -lnetcdf -lhdf5_hl -lhdf5 -lz -lbz2

#
# Qt
#

QJSENGINE = -F/usr/local/Cellar/qt/5.14.2/lib -framework QtQml
PKG_CONFIG_PATH = /usr/local/opt/qt5/lib/pkgconfig
QT_INCLUDES = $(shell pkg-config --cflags Qt5Core Qt5Widgets Qt5Gui)
QT_LDFLAGS = -L$(shell pkg-config --variable=libdir Qt5Gui)
QT_LIBS = $(shell pkg-config --libs Qt5Core Qt5Widgets Qt5Gui)
QT_CPPC_CFLAGS = -std=c++11
QT_EXEC_PATH=$(shell pkg-config --variable=exec_prefix Qt5Core)

# do not have jasper lib

JASPER_CPPC_CFLAGS = -DNO_JASPER_LIB
JASPER_INCLUDES =
JASPER_LDFLAGS =
JASPER_LIBS =

# have jasper lib

# JASPER_CPPC_CFLAGS =
# JASPER_INCLUDES = -I/usr/local/jasper/include
# JASPER_LDFLAGS = -L/usr/local/jasper/lib
# JASPER_LIBS = -ljasper

