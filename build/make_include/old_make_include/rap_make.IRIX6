# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
# ** Copyright UCAR (c) 1992 - 2010 
# ** University Corporation for Atmospheric Research(UCAR) 
# ** National Center for Atmospheric Research(NCAR) 
# ** Research Applications Laboratory(RAL) 
# ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
# ** 2010/10/7 16:53:3 
# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
###########################################################
#
# Macros for IRIX6 machines
#
# Mike Dixon
#
# RAP,NCAR,Boulder,Colorado,80307,USA
#
# Nov 1994
#
############################################################

#
# system utilities
#

SHELL = /bin/sh
RM = /bin/rm -f
MV = /bin/mv -f
CP = /bin/cp
CP_DIR = /bin/cp -r
MKDIR = /bin/mkdir -p
TEST = /bin/test
PERL = /usr/bin/perl

#
# includes
#

SYS_X_INCLUDES =

#
# LD_LIBRARY_PATH
#

SYS_LD_LIBRARY_PATH =

#
# lint
#

LINT = alint
LINTFILTER = $(RAP_MAKE_BIN_DIR)/lint_filter.$(HOST_OS)
SYS_LINTFLAGS = -aux -DLINT -D$(HOST_OS)

#
# compile
#

#CC = cc -32
#CPPC = CC
#SYS_CFLAGS =  -ansi -fullwarn -w 835 -D$(HOST_OS) -D_BSD_TYPES
#SYS_CPPC_CFLAGS =  -D$(HOST_OS)

CC = gcc
CPPC = g++
SYS_CFLAGS = $(GCC_WARNINGS) -D$(HOST_OS) -DF_UNDERSCORE2
SYS_CPPC_CFLAGS = $(GCC_WARNINGS) -D$(HOST_OS)


ACC = $(CC)
CPP = /usr/lib/cpp
cpp = /usr/lib/cpp
SYS_INCLUDES = -I/usr/include
SYS_CPPC_INCLUDES =
DEBUG_FLAG = -g
OPT_FLAG = -O
PROFILE_FLAG = -p

# Compile -- special for C <-> FORTRAN
# The "NATIVE" compilers need to be either both GNU or both
# non-GNU for these compiles to work. If you use GNU, then
# the USE_GNU_F2C must be set to "-DUSE_GNU_F2C" (no quotes).

NATIVE_CC = cc
NATIVE_FC = f77
NATIVE_LIB_DIR = /usr/lib
F_TO_C_LIBS = -lF77
USE_GNU_F2C =

#
# link
#

SYS_LIBS = -lmalloc
SYS_LDFLAGS =
SYS_X_LDFLAGS =
SYS_MOTIF_FLAGS =
LEX_LIB = -ll
YACC_LIB = -ly
SYS_UCB_LIBS =
SYS_UCB_LDFLAGS =

#
# Archiving libs
#

AR = ar
ARFLAGS = rv
RANLIB = /usr/princeton/bin/ranlib
HAVE_RANLIB=FALSE

#
# SMART_SPACE is designed to get around the fact that the BDS linker
# expects a space after the -o switch, whereas the SYSV linker does not.
#
# On SYSV systems, have no space between the dummy macros
#

SMART_SPACE = $(UNDEFINED) $(UNDEFINED)

#
# purify
#

PURE = pure
SYS_PURE_FLAGS = 
