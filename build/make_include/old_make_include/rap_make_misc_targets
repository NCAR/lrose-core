# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
# ** Copyright UCAR (c) 1992 - 2010 
# ** University Corporation for Atmospheric Research(UCAR) 
# ** National Center for Atmospheric Research(NCAR) 
# ** Research Applications Laboratory(RAL) 
# ** P.O.Box 3000, Boulder, Colorado, 80307-3000, USA 
# ** 2010/10/7 16:53:3 
# *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* 
##########################################################################
#
# Makefile miscellaneous targets
#
# Mike Dixon
#
# RAP,NCAR,Boulder,Colorado,80307,USA
# 
# Nov 1998
#
###########################################################################

# generic clean

clean: clean_pg clean_insure
	$(RM) core a.out
	$(RM) *.i *.o  *.ln *~ *.mod

# clean parasoft compiler files

clean_insure:
	$(RM) tca.map tca.log .inslog _*.out

# clean portland group compiler files

clean_pg:
	$(RM) -r *.ti *.ii pchdir

lintall:
	$(RM) *.ln
	$(MAKE) lint

lint:	lhcheck lcheck

copyright:
	copyright_remove $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) $(HDRS)
	copyright_prepend $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) $(HDRS)

rcs_keys:
	rcs_keys_remove $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) $(HDRS)
	rcs_keys_prepend $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) $(HDRS)

tags:
	etags -t $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) $(HDRS) Makefile

depend_generic:
	makedepend $(INCLUDES) -- $(CFLAGS) -- $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) 

depend: depend_generic

clean_depend:
	makedepend

# add to README file

add2readme:
	grep_line=`egrep ^TARGET_FILE Makefile | egrep \.a$ | wc -l` ;\
	if $(TEST) $${grep_line} -lt 1; then \
		RAP_BIN_DIR=$(RAP_LIB_DIR) ;\
	fi
	if $(TEST) -f $(TARGET_FILE) ; then \
		echo "$(TARGET_FILE) -- source: `pwd`, `date`" >> $(RAP_BIN_DIR)/README.src_dir_info ;\
	fi

# Run source code compliance checker

cppcheck:
	if $(TEST) -d $(LOC_INC_DIR) ; then \
	   CppRuleCheck $(SYS_CPPCHECKFLAGS2) $(CPPCHECKFLAGS) $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) *.h *.hh ;\
	else \
	   CppRuleCheck $(CPPCHECKFLAGS) $(SRCS) $(C_SRCS) $(CPPC_SRCS) $(CPP_SRCS) *.h *.hh ;\
	fi


