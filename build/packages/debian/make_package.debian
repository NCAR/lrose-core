#! /bin/bash

###########################################################
# in the docker build image,
# create .deb file, place it in /tmp

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Make .deb package in docker container"
    echo "Usage:"
    echo "  $scriptName [options below]"
    echo "  -h   :  help"
    echo "  -d   :  turn debugging on"
    echo "  -p ? :  set lrose_pkg"
    echo "          e.g. core, blaze, cyclone, radx"
    echo "  -r ? :  set release_date"
    echo "          e.g. latest, 20190105"
    echo "  -t ? :  set os_type"
    echo "          e.g. debian, ubuntu"
    echo "  -v ? :  set os_version"
    echo "          e.g. 9 for debian 9, 18.04 for ubuntu 18.04"
    echo
}

scriptName=$(basename $0)

os_type=debian
os_version=9
lrose_pkg=core
release_date=latest
debug=true

# Parse command line options.
while getopts hdt:v:p:r: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        p)
            lrose_pkg=$OPTARG
            ;;
        r)
            release_date=$OPTARG
            ;;
        t)
            os_type=$OPTARG
            ;;
        v)
            os_version=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

if [ "$debug" == "true" ]
then
  echo "Running $scriptName"
  echo "  making .deb package in docker container"
  echo "    os_type: ${os_type}"
  echo "    os_version: ${os_version}"
  echo "    lrose_pkg: ${lrose_pkg}"
  echo "    release_date: ${release_date}"
fi

# go to scripts dir

cd ~/git/lrose-core/build/packages/debian

# create directory to hold the .deb file
# that will be written

pkgDir=/tmp/${os_type}-${os_version}-${lrose_pkg}/pkgs
/bin/rm -rf $pkgDir
mkdir -p $pkgDir

# make scripts available to container

scriptsDir=`pwd`

# run script in container to make the package
# use -v to cross-mount the tmp directory into the container

docker run \
    -v ${scriptsDir}:/scripts \
    -v ${pkgDir}:/pkgs \
    build.${lrose_pkg}/${os_type}:${os_version} \
    /scripts/build_pkg.debian \
    -t ${os_type} -v ${os_version} \
    -p ${lrose_pkg} -r ${release_date}

# ensure the release dir exists

releaseDir=${HOME}/releases/lrose-${lrose_pkg}
mkdir -p ${releaseDir}

# copy the package to the release dir

rsync -av ${pkgDir}/*.deb ${releaseDir}

