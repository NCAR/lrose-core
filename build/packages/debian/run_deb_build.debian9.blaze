#!/bin/bash

# This script is to be executed inside an lrose-blaze container
# It assume lrose-base is installed at /usr/local/lrose
#
# It also assumes that the container invocation was done such that this script,
# and package definition are available in $BUILD_ROOT
# The resulting .db package will be available n $BUILD_ROOT
#
# For example:
#    docker run \
#        -v ${debDir}:/debs \
#        debian9:build \
#        /root/git/lrose-core/build/packages/ubuntu/run_deb_build.debian9.blaze

# Make sure we have rsync
apt-get update
apt-get install -y rsync

DATE_STR=`date +"%Y%m%d"`
LROSE_ROOT=/usr/local/lrose
BUILD_ROOT=/build_pkg
BUILD_DIR=lrose-blaze_${DATE_STR}_debian9

if [ ! -d "$LROSE_ROOT" ]; then
    echo "-E- No such directory '$LROSE_ROOT'"
    exit 1
fi

mkdir -p $BUILD_ROOT
cd $BUILD_ROOT
mkdir -p /usr/local

# Mirror the /usr/local/lrose hierarchy under the BUILD_ROOT
rsync -avz $LROSE_ROOT $BUILD_ROOT/usr/local/

# create the control file

mkdir -p $BUILD_ROOT/DEBIAN
cd $BUILD_ROOT/DEBIAN
/bin/rm -f control
touch control
echo "Package: lrose-blaze" >> control
echo "Version: ${DATE_STR}" >> control
echo "Section: base" >> control
echo "Priority: optional" >> control
echo "Architecture: x86_64" >> control
echo "Depends: libqt5gui5, libqt5core5a, qt5-default, qtbase5, libx11-6, libfftw3-3, libgeographic14, libfreetype6, libcurl3, libfl, libbz2, libx11, libpng, libfftw3, libeigen3, libzip" >> control
echo "Maintainer: NCAR/EOL/RSF <lrose-help@rams.colostate.edu>" >> control
echo "Description: lrose-blaze" >> control
echo "  Binary package of lrose-blaze on Debian x.xx" >> control

# Make the package
cd $BUILD_ROOT
dpkg-deb --build lrose-blaze-${DATE_STR}.debian9

# The resulting package can be installed with
# apt-get update
# apt install -y lrose-blaze_${DATE_STR}.debian9.deb
