#! /bin/bash
#
# Building LROSE and required libraries
# =====================================
#
# This use the NCAR make system.
#
# This script must be run from the 'lrose-core' subdirectory.
# 
# The libraries and applications will be installed in:
#
#   $LROSE_INSTALL_DIR/include
#   $LROSE_INSTALL_DIR/lib
#   $LROSE_INSTALL_DIR/bin
#
# Depends on HDF5, NETCDF and UDUNITS
# ----------------------------------
#
# Before running this, run the following:
#  cd ~/git
#  git clone https://github.com/NCAR/lrose-netcdf
#  cd lrose-netcdf
#  build_and_install_netcdf -x $LROSE_INSTALL_DIR

################################################################################

# set the path

export PATH=${PATH}:.:/bin:./make_bin:/usr/bin:/sbin:/usr/sbin:/usr/bin/X11:/usr/local/bin:/usr/local/sbin:$HOME/bin:/usr/lib64/qt4/bin:/usr/lib/qt4/bin

# save starting location and script name

scriptName=$(basename $0)

export LROSE_CORE_DIR=`pwd`
runDir=${LROSE_CORE_DIR}
codebaseDir=${runDir}/codebase

# defaults

prefix=${LROSE_INSTALL_DIR}
package=lrose
debug=true

#--------------------------------------------------------------------
# usage function
#

function usage() {
    echo
    echo "Usage: $scriptName [options below]"
    echo "  -h   :  produce this usage list"
    echo "  -d   :  turn debugging on"
    echo "  -p ? :  set package"
    echo "           default is 'lrose'"
    echo "  -x ? :  set prefix"
    echo "           default is '/usr/local/lrose'"
    echo
}

# Parse command line options.
while getopts hdp:x: OPT; do
    case "$OPT" in
        h)
            usage
            exit 0
            ;;
        d)
            debug=true
            ;;
        p)
            package=$OPTARG
            ;;
        x)
            prefix=$OPTARG
            ;;
        \?)
            # getopts issues an error message
            echo "Problems with command line usage"
            usage
            exit 1
            ;;
    esac
done

if [ "$debug" == "true" ]
then
  echo "Running $scriptName"
  echo "  package: $package"
  echo "  prefix: $prefix"
  echo "  runDir: $runDir"
fi

# Remove the switches we parsed above.
shift `expr $OPTIND - 1`

# set RPATH to be locatable relative to $ORIGIN, via LDFLAGS

export LROSE_INSTALL_DIR=${prefix}

# Set up build environment
# ------------------------

export HOST_OS=LINUX_64
if [ "$package" == "cidd" ]
then
  export HOST_OS=LINUX_64_CIDD32
fi
uname -a | grep x86_64
if [ "$?" = 1 ]
then
    export HOST_OS=LINUX
fi

export HOST_OS=DARWIN

export RAP_MAKE_INC_DIR=$LROSE_CORE_DIR/codebase/make_include
export RAP_MAKE_BIN_DIR=$LROSE_CORE_DIR/codebase/make_bin

export RAP_INC_DIR=$LROSE_INSTALL_DIR/include
export RAP_LIB_DIR=$LROSE_INSTALL_DIR/lib
export RAP_BIN_DIR=$LROSE_INSTALL_DIR/bin
export RAP_MAN_DIR=$LROSE_INSTALL_DIR/man
export RAP_DOC_DIR=$LROSE_INSTALL_DIR/doc

export RAP_SHARED_INC_DIR=$LROSE_INSTALL_DIR/include
export RAP_SHARED_LIB_DIR=$LROSE_INSTALL_DIR/lib
export RAP_SHARED_BIN_DIR=$LROSE_INSTALL_DIR/bin
export RAP_SHARED_MAN_DIR=$LROSE_INSTALL_DIR/man
export RAP_SHARED_DOC_DIR=$LROSE_INSTALL_DIR/doc

export RAP_INST_LIB_DIR=$LROSE_INSTALL_DIR/lib
export RAP_INST_BIN_DIR=$LROSE_INSTALL_DIR/bin

export PATH=$RAP_BIN_DIR:$PATH
export LD_LIBRARY_PATH=$RAP_LIB_DIR:$LD_LIBRARY_PATH


# Build lrose - libraries and binaries
# ------------------------------------

cd $codebaseDir
./make_bin/install_package_makefiles.osx.py --package $package

cd $codebaseDir/libs/tdrp/src
make -j 8 opt
make install

echo "-----> finished tdrp"

cd $codebaseDir/apps/tdrp/src/tdrp_gen
make -j 8 opt
make install

echo "-----> finished tdrp_gen"

cd $codebaseDir/libs
make -j 8 -k install_include
make -j 8 -k opt
make -j 8 -k install

echo "------> finished libs"

cd $codebaseDir/apps
make -j 8 -k opt
make -j 8 -k install

echo "------> finished apps"

cd $codebaseDir/apps/scripts/src
make install

cd $codebaseDir/apps/procmap/src/scripts
make install

# Install perl lib modules
#-------------------------

if [ "$package" == "lrose" -o "$package" == "hcr" ]
then
  cd $codebaseDir
  cd libs/perl5/src
  mkdir -p ${prefix}/lib/perl5
  rsync -av *pm ${prefix}/lib/perl5
fi

# Install scripts
#----------------

if [ "$package" == "lrose" -o "$package" == "hcr" ]
then

  cd $codebaseDir/apps/procmap/src/scripts
  ./install_scripts.lrose ${prefix}/bin

  cd $codebaseDir/apps/scripts/src
  ./install_scripts.lrose ${prefix}/bin

fi

# Install pkg-config scripts
#----------------

cd $codebaseDir
./make_bin/createPkgConfig.py ${prefix}
rsync -av $codebaseDir/make_bin/lrose-config.template ${prefix}/bin
chmod u+x ${prefix}/bin/lrose-config

# Checking the build
# ------------------

cd $runDir
echo
echo "============= Checking libs for $package ============="

./codebase/make_bin/check_libs.py \
  --listPath ./build/checklists/libs_check_list.${package} \
  --libDir ${prefix}/lib \
  --label $package --maxAge 3600

echo "===================================================="

echo
echo "============= checking apps for $package ============="

./codebase/make_bin/check_apps.py \
  --listPath ./build/checklists/apps_check_list.${package} \
  --appDir ${prefix}/bin \
  --label $package --maxAge 3600

echo "=================================================="

