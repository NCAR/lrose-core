/**********************************************************************
 * TDRP params for ./ArgentineAwsIngest
 **********************************************************************/

//======================================================================
//
// ArgentineAwsIngest reads AWS records from CVS files, converts them to 
//   WQxObs objects, and writes them to SPDB and/or NetCDF.
//
//======================================================================
 
//======================================================================
//
// DEBUGGING AND PROCESS CONTROL.
//
//======================================================================
 
///////////// debug ///////////////////////////////////
//
// Debug option.
//
// If set, debug messages will be printed with the appropriate level of 
//   detail.
//
//
// Type: enum
// Options:
//     DEBUG_OFF
//     DEBUG_NORM
//     DEBUG_VERBOSE
//

debug = DEBUG_OFF;

///////////// instance ////////////////////////////////
//
// Process instance.
//
// Used for registration with procmap.
//
//
// Type: string
//

instance = "test";

//======================================================================
//
// PROGRAM MODES OF OPERATION.
//
//======================================================================
 
///////////// mode ////////////////////////////////////
//
// Operating mode.
//
// In REALTIME mode, the program waits for a new input file. In this 
//   mode it is optional to watch for a latest_data_info file. In FILELIST 
//   mode, it processes all of the files in the list specified on the 
//   command line.
//
//
// Type: enum
// Options:
//     REALTIME
//     FILELIST
//

mode = REALTIME;

//======================================================================
//
// DATA INPUT.
//
//======================================================================
 
///////////// input_dir ///////////////////////////////
//
// Input directory.
//
// Directory where input data files can be found.
//
//
// Type: string
//

input_dir = "$(DATA_DIR)/relampago/raw/aws";

///////////// latest_data_info_avail //////////////////
//
// Set to true if there is a latest_data_info file available in the 
//   input directory.
//
// REALTIME mode only.
//
//
// Type: boolean
//

latest_data_info_avail = TRUE;

///////////// max_realtime_valid_age //////////////////
//
// Max valid age of input files in realtime mode (secs).
//
// This the max valid age for an incoming file. The program will wait 
//   for a data file more recent than this age.
//
// Minimum val: 1
//
// Type: int
//

max_realtime_valid_age = 7200;

///////////// input_fields ////////////////////////////
//
// List of input fields, by column.
//
// This is the column-ordered list of fields in the CSV file.
//
//
// Type: enum
// Options:
//     FIELD_LATITUDE
//     FIELD_LONGITUDE
//     FIELD_ALTITUDE
//     FIELD_STATION_CODE
//     FIELD_TIME_UTC
//     FIELD_TEMPERATURE_C
//     FIELD_RH_PERCENT
//     FIELD_DEWPOINT_C
//     FIELD_WIND_VEL_KMPH
//     FIELD_WIND_DIRN_DEGT
//     FIELD_PRESSURE_HPA
//     FIELD_RAIN_4HR_MM
//     FIELD_RAIN_6HR_MM
//     FIELD_PRECIP_1HR_MM
//     FIELD_PRECIP_10MIN_MM
// 1D array - variable length.
//

input_fields = {
 FIELD_LATITUDE,
 FIELD_LONGITUDE,
 FIELD_ALTITUDE,
 FIELD_STATION_CODE,
 FIELD_TIME_UTC,
 FIELD_TEMPERATURE_C,
 FIELD_RH_PERCENT,
 FIELD_DEWPOINT_C,
 FIELD_WIND_VEL_KMPH,
 FIELD_WIND_DIRN_DEGT,
 FIELD_PRESSURE_HPA,
 FIELD_RAIN_4HR_MM,
 FIELD_RAIN_6HR_MM,
 FIELD_PRECIP_1HR_MM,
 FIELD_PRECIP_10MIN_MM
};

//======================================================================
//
// DATA OUTPUT.
//
//======================================================================
 
///////////// write_to_spdb ///////////////////////////
//
// Option to write data out to SPDB data base files.
//
//
// Type: boolean
//

write_to_spdb = TRUE;

///////////// spdb_output_url /////////////////////////
//
// Output URL for decoded AWS data.
//
// See the DIDSS docs for details on URL usage.
//
//
// Type: string
//

spdb_output_url = "$(DATA_DIR)/relampago/spdb/aws";

///////////// spdb_expire_seconds /////////////////////
//
// Expire time in seconds for each observation.
//
// This value will be added to the obs time to determine the expire time 
//   for the observation.
//
//
// Type: int
//

spdb_expire_seconds = 1800;

///////////// write_to_netcdf /////////////////////////
//
// Option to write data out to NetCDF files.
//
//
// Type: boolean
//

write_to_netcdf = TRUE;

///////////// netcdf_output_dir ///////////////////////
//
// Output directory for NetCDF files.
//
//
// Type: string
//

netcdf_output_dir = "/tmp/netcdf/relampago/aws";

