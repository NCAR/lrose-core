/**********************************************************
 * paramdef.RadxModelQc
 *
 * This file contains the TDRP parameter definitions for RadxModelQc app
 * 
 */

///////////////////////////////////////////////////////////////////////////////////////////////////////
commentdef
{
  p_header = "RadxModelQc";
  p_text = "Parameters for data filtering for Radx format input data to produce quality control measures";
};

///////////////////////////////////////////////////////////////////////////////////////////////////////

commentdef {
  p_header =
    "Filters to apply";
  p_text =
    "new";
}

paramdef boolean
{
  p_descr = "True to output all fields, false to use list";
  p_default = true;
} output_all_fields;

paramdef string
{
  p_descr = "fields to output";
  p_default = {};
} output_fields[];

paramdef string
{
  p_descr = "Fixed constant strings that are interpreted by user functions";
  p_default = {};
} fixed_const[];

typedef struct
{
  string interface;
  string description;
} Filter_t;

paramdef struct Filter_t
{
  p_descr = "User unary single ray filters (functions)";
  p_default = {};
} userUnaryFilters[];

paramdef struct Filter_t
{
  p_descr = "User Volume filters (unary functions)";
  p_default = {};
} userVolumeFilters[];

paramdef string
{
  p_descr = "Volume Filters to apply before doing ray filters";
  p_default = {};
} vol_filter[];  

paramdef string
{
  p_descr = "Sweep filters to apply";
  p_default = {};
} sweep_filter[];  

paramdef string
{
  p_descr = "Single ray Filters to apply";
  p_default = {};
} filter[];  

paramdef string
{
  p_descr = "Volume Filters to apply after doing ray filters";
  p_default = {};
} vol_filter_after[];  

paramdef double
{
 p_descr = "Radius for 2d variance";
 p_default = 1.0;
} variance_radius_km;
