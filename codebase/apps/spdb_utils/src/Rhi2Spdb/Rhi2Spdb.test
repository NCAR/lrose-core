/**********************************************************************
 * TDRP params for Rhi2Spdb
 **********************************************************************/

//======================================================================
//
// Program name: Rhi2Spdb.
//
// Rhi2Spdb reads Radx or MDV files containing RHI radar data, creates a 
//   GenPt to describe the rhi details and stores it in SPDB.
//
//======================================================================
 
//======================================================================
//
// PROGRAM CONTROL.
//
//======================================================================
 
///////////// debug ///////////////////////////////////
//
// Debug option.
//
// If set, debug messages will be printed appropriately.
//
//
// Type: enum
// Options:
//     DEBUG_OFF
//     DEBUG_NORM
//     DEBUG_VERBOSE
//

debug = DEBUG_OFF;

///////////// instance ////////////////////////////////
//
// Process instance.
//
// Used for registration with procmap.
//
//
// Type: string
//

instance = "test";

///////////// mode ////////////////////////////////////
//
// Operating mode.
//
// In REALTIME mode, the program waits for a new input file - and this 
//   requires that the latest_data_info files are available. In ARCHIVE 
//   mode, it moves through the data between the start and end times set 
//   on the command line. In FILELIST mode, it moves through the list of 
//   file names specified on the command line.
//
//
// Type: enum
// Options:
//     ARCHIVE
//     REALTIME
//     FILELIST
//

mode = ARCHIVE;

//======================================================================
//
// DATA INPUT.
//
//======================================================================
 
///////////// input_url ///////////////////////////////
//
// Input DIR for RHI data.
//
// This is used in REALTIME and ARCHIVE modes only. In FILELIST mode, 
//   the file paths are specified on the command line.
//
//
// Type: string
//

input_url = "/tmp/rhi/input";

///////////// max_realtime_data_age_secs //////////////
//
// Maximum age of realtime data (secs).
//
// Only data less old than this will be used.
//
//
// Type: int
//

max_realtime_data_age_secs = 600;

//======================================================================
//
// DATA OUTPUT.
//
// Spdb output.
//
//======================================================================
 
///////////// output_url //////////////////////////////
//
// Output URL for SPBD data.
//
//
// Type: string
//

output_url = "/tmp/spdb/rhi";

