/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/*********************************************************
 * parameter definitions for TrackMatch
 *
 * Mike Dixon, RAP, NCAR, Boulder, CO, USA, 80307-3000
 *
 * July 1998
 */

paramdef enum debug {
  p_options = {DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM, DEBUG_VERBOSE};
  p_default = {DEBUG_OFF};
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed with the appropriate level of detail.";
} debug;

paramdef long {
  p_default = {0};
  p_min = {0};
  p_max = {3};
  p_descr = "Malloc debug level";
  p_help = "0 - none, 1 - corruption checking, 2 - records all malloc blocks and checks, 3 - printout of all mallocs etc.";
} malloc_debug_level;

paramdef char* {
  p_default = {"Test"};
  p_descr = "Process instance";
  p_help = "Used for registration with procmap.";
} instance;

paramdef long {
  p_default = {1};
  p_descr = "Case number for the match.";
  p_help = "This is the case for which the match is sought.";
} case_num;

paramdef char* {
  p_default = {"null"};
  p_descr = "File path of seed cases.";
  p_help = "This file indicates the time and track numbers for each seeded case. In addition the environmental conditions, such as cloud base and CAPE are input from this file.";
} case_file_path;

paramdef long {
  p_default = {20};
  p_descr = "Number of track candidates in list.";
  p_help = "This program finds tracks which match the given case as closely as possible. A list of candidate tracks is found and sorted. The list is n_candidates long.";
} n_candidates;

paramdef enum match_property {
  p_options = {VOLUME, AREA, MASS, PRECIP_FLUX};
  p_default = {PRECIP_FLUX};
  p_descr = "Property for matching tracks.";
  p_help = "This is the property used for matching up the tracks.";
} match_property;

paramdef boolean {
  p_default = {TRUE};
  p_descr = "Option to use rate for matching.";
  p_help = "If set, the rate of change will be used for matching. If not, the absolute value will be used for the match.";
} use_rate_for_match;

paramdef double {
  p_default = {2.0};
  p_descr = "Margin between time of case track and candidate track (hr).";
  p_help = "Only tracks with a start time difference within this margin are considered. Use -1.0 for no checking.";
} time_margin;

paramdef double {
  p_default = {25.0};
  p_descr = "Margin between range of case track and candidate track (km).";
  p_help = "Only tracks with a start range difference within this margin are considered. Use -1.0 for no checking.";
} range_margin;




