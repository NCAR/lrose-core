/****************************************************
 * TDRP params for track_grid_stats
 ****************************************************/

/*
 * Debug option.
 * If set, debug messages will be printed appropriately.
 *
 * Type: enum
 * Default: DEBUG_OFF 
 * Legal values: DEBUG_OFF, DEBUG_WARNINGS, DEBUG_NORM,
 *   DEBUG_EXTRA.
 */
debug = DEBUG_OFF;

/*
 * Malloc debug level.
 * 0 - none, 1 - corruption checking, 2 - records all malloc blocks
 *   and checks, 3 - printout of all mallocs etc.
 *
 * Type: long
 * Default: 0 
 * Min value: 0 
 * Max value: 3 
 */
malloc_debug_level = 0;

/*
 * Note for stats file.
 * Note to go in track stats grid file.
 *
 * Type: string
 * Default: "Track grid statistics" 
 */
note = "Radar track stats, Denver, CO";

/*
 * Option to compute the max precip depth for a given duration.
 * If this is set, the max precip depth for a given duration will
 *   bw computed and stored in the given field. If not the field will
 *   be left with zero entries.
 *
 * Type: boolean
 * Default: FALSE 
 */
compute_dur_max_precip = FALSE;

/*
 * Duration for max precip duration comps - secs.
 * The duration in seconds for which the maximum precip depth is
 *   computed.
 *
 * Type: long
 * Default: 1800 
 * Min value: 300 
 * Max value: 86400 
 */
dur_for_max_precip = 3600;

/*
 * Track grid stats directory.
 * Upper level directory for output grid stats files.
 *
 * Type: string
 * Default: "none" 
 */
grid_stats_dir = "$(TITAN_HOME)/grid_stats";

/*
 * Output file extension.
 * File name extension for output cartesian files.
 *
 * Type: string
 * Default: "mdv" 
 */
output_file_ext = "mdv";

/*
 * Number of seasons for stats.
 * The number of seasons for computing the seasonal means, such
 *   as precip.
 *
 * Type: long
 * Default: 1 
 */
n_seasons = 6;

/*
 * Radar vol scan interval (secs).
 * Interval between radar volume scans (secs).
 *
 * Type: double
 * Default: 360 
 * Min value: 0 
 * Max value: 1800 
 */
scan_interval = 360;

/*
 * Min track duration (secs).
 * The minimum duration for including a track in the analysis (secs).
 *
 * Type: double
 * Default: 900 
 * Min value: 0 
 * Max value: 10000 
 */
min_duration = 1500;

/*
 * Grid latitude.
 * Latitude of grid origin.
 *
 * Type: double
 * Default: 39.8782 
 * Min value: -90 
 * Max value: 90 
 */
grid_lat = 39.787;

/*
 * Grid longitude.
 * Longitude of grid origin.
 *
 * Type: double
 * Default: -104.759 
 * Min value: -180 
 * Max value: 180 
 */
grid_lon = -104.546;

/*
 * Grid parameters.
 * The grid params for the track stats.
 *
 * Type: struct
 */
grid = {
  120, /* nx:long */
  120, /* ny:long */
  -148.75, /* minx:double */
  -148.75, /* miny:double */
  2.5, /* dx:double */
  2.5  /* dy:double */
};

/*
 * Z-R coefficient.
 * The coefficient in the Z-R relationship.
 *
 * Type: double
 * Default: 200 
 * Min value: 1 
 * Max value: 2000 
 */
z_r_coeff = 500;

/*
 * Z-R exponent.
 * The exponent in the Z-R relationship.
 *
 * Type: double
 * Default: 1.6 
 * Min value: 0.1 
 * Max value: 10 
 */
z_r_exponent = 1.3;

/*
 * Hail dBZ threshold.
 * The reflectivity threshold above which hail is assumed.
 *
 * Type: double
 * Default: 55 
 * Min value: 40 
 * Max value: 80 
 */
hail_dbz_threshold = 53;


