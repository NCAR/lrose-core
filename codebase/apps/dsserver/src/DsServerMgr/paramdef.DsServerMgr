/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/*********************************************************
 * parameter definitions for DsServerMgr
 *
 * Paddy McCarthy, RAP, NCXAR, Boulder, CO, USA, 80307-3000
 *
 * January 1999
 */

commentdef {
  p_header = "DEBUGGING AND PROCESS CONTROL";
}

typedef enum {
  DEBUG_OFF, DEBUG_NORM, DEBUG_VERBOSE
} debug_t;

paramdef enum debug_t
{
  p_default = DEBUG_OFF;
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

paramdef boolean {
  p_default = FALSE;
  p_descr = "Option to prevent server from using a thread per client.";
  p_help = "For debugging purposes it it sometimes useful to suppress the use of threads. Set no_threads to TRUE for this type of debugging.";
} noThreads;

paramdef char* {
  p_default = "primary";
  p_descr = "Process and server instance";
  p_help = "Used for registration with procmap. Use primary for the main server.";
} instance;

paramdef int {
  p_default = 5435;
  p_min = 5000;
  p_descr = "Server port number.";
  p_help = "TCP/IP port for this server.";
} port;

paramdef int {
  p_default = 3600;
  p_min = -1;
  p_descr = "Length of time before quiescent server exits successfully.";
  p_help = "Negative value will disable quiescence checking.";
} maxQuiescentSecs;

paramdef int {
  p_default = 1024;
  p_min = 1;
  p_descr = "Maximum number of clients to be handled at the same time.";
  p_help = "This value is limited by the OS.";
} maxClients;

paramdef boolean {
  p_default = FALSE;
  p_descr = "Option to start servers in secure mode.";
  p_help = "If TRUE, the servers will be started in secure mode. This mode rejects any URLs which specify an absolute path, or a path with .. in it. This prevents the server from writing any files which are not below DATA_DIR in the directory tree.";
} runSecure;

paramdef boolean {
  p_default = FALSE;
  p_descr = "Option to start the DsMdvServer in read-only mode.";
  p_help = "If TRUE, the DsMdvServer will be started with the -rdonly arg. It will respond only to read requests, and will ignore write requests.";
} mdvReadOnly;

paramdef boolean {
  p_default = FALSE;
  p_descr = "Option to start the DsSpdbServer in read-only mode.";
  p_help = "If TRUE, the DsSpdbServer will be started with the -rdonly arg. It will respond only to read requests, and will ignore write requests.";
} spdbReadOnly;



