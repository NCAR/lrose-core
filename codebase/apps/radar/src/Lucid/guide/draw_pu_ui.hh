/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
/* ** Copyright UCAR (c) 1990 - 2016                                         */
/* ** University Corporation for Atmospheric Research (UCAR)                 */
/* ** National Center for Atmospheric Research (NCAR)                        */
/* ** Boulder, Colorado, USA                                                 */
/* ** BSD licence applies - redistribution and use in source and binary      */
/* ** forms, with or without modification, are permitted provided that       */
/* ** the following conditions are met:                                      */
/* ** 1) If the software is modified to produce derivative works,            */
/* ** such modified software should be clearly marked, so as not             */
/* ** to confuse it with the version available from UCAR.                    */
/* ** 2) Redistributions of source code must retain the above copyright      */
/* ** notice, this list of conditions and the following disclaimer.          */
/* ** 3) Redistributions in binary form must reproduce the above copyright   */
/* ** notice, this list of conditions and the following disclaimer in the    */
/* ** documentation and/or other materials provided with the distribution.   */
/* ** 4) Neither the name of UCAR nor the names of its contributors,         */
/* ** if any, may be used to endorse or promote products derived from        */
/* ** this software without specific prior written permission.               */
/* ** DISCLAIMER: THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS  */
/* ** OR IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED      */
/* ** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.    */
/* *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=* */
#ifndef	draw_pu_HEADER
#define	draw_pu_HEADER

/*
 * draw_pu_ui.h - User interface object and function declarations.
 * This file was generated by `gxv' from `draw_pu.G'.
 * DO NOT EDIT BY HAND.
 */

extern Attr_attribute	INSTANCE;


typedef struct {
	Xv_opaque	draw_pu;
	Xv_opaque	controls2;
	Xv_opaque	type_st;
	Xv_opaque	serialno_tx;
	Xv_opaque	validtm_tx;
	Xv_opaque	minute_msg;
	Xv_opaque	label_tx;
	Xv_opaque	time_tx;
	Xv_opaque	url_tx;
	Xv_opaque	cancel_bt;
	Xv_opaque	ok_bt;
} draw_pu_draw_pu_objects;

extern draw_pu_draw_pu_objects	*draw_pu_draw_pu_objects_initialize(draw_pu_draw_pu_objects *, Xv_opaque);

extern Xv_opaque	draw_pu_draw_pu_draw_pu_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_controls2_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_type_st_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_serialno_tx_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_validtm_tx_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_minute_msg_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_label_tx_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_time_tx_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_url_tx_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_cancel_bt_create(draw_pu_draw_pu_objects *, Xv_opaque);
extern Xv_opaque	draw_pu_draw_pu_ok_bt_create(draw_pu_draw_pu_objects *, Xv_opaque);
#endif
