//////////////////////////////////////////////////////////////////////
// parameter definitions Iwrf2AparTs
//
// EOL, NCAR,
// P.O.Box 3000, Boulder, CO, USA, 80307-3000
//
// Aug 2019
//
//////////////////////////////////////////////////////////////////////

commentdef {
  p_header = "Iwrf2AparTs reads IWRF time series files, converts to APAR TS data, and writes the files to a specified. The input files are specified on the command line.";
}

commentdef {
  p_header = "DEBUGGING AND PROCESS CONTROL.";
}

typedef enum {
  DEBUG_OFF, DEBUG_NORM, DEBUG_VERBOSE, DEBUG_EXTRA
} debug_t;

paramdef enum debug_t {
  p_default = DEBUG_OFF;
  p_descr = "Debug option";
  p_help = "If set, debug messages will be printed appropriately";
} debug;

commentdef {
  p_header = "SPECIFY APAR TIME-SERIES DETAILS";
};

paramdef int {
  p_default = 5;
  p_descr = "Number of samples taken each time we revisit the beam location.";
  p_help = "We take this number of samples for an az/el, then move to sampling for other locations, before coming back to visit this beam again.";
} n_samples_per_visit;

paramdef int {
  p_default = 6;
  p_descr = "Number of visits for each beam.";
  p_help = "During a dwell, we come back to a specific beam location this number of times.";
} n_visits_per_beam;

paramdef int {
  p_default = 4;
  p_descr = "Number of beams sampled in a dwell.";
  p_help = "During a dwell, we create this number of beams. Then repeat for the next dwell.";
} n_beams_per_dwell;

paramdef boolean {
  p_default = false;
  p_descr = "Add 1 cross-pol sample at end of visit.";
  p_help = "APAR can receive in co-polar or cross-polar mode. This option allows us to test the cross-polar mode, by including a cross-polar sample at the end of each visit. This option effectively increases n_samples_per_visit by 1.";
} add_cross_pol_sample_at_end_of_visit;

commentdef {
  p_header = "OUTPUT MODES";
};

typedef enum {
  OUTPUT_FILES, OUTPUT_UDP
} output_mode_t;

paramdef enum output_mode_t {
  p_default = OUTPUT_FILES;
  p_descr = "Control what is written.";
  p_help = "OUTPUT_FILES - generates time series files in APAR format. OUTPUT_UDP - writes out simulated data to the DREX FPGA, via UDP.";
} output_mode;

paramdef string {
  p_default = "./output";
  p_descr = "Directory for output files.";
  p_help = "For output_mode = OUTPUT_FILES.";
} output_dir;

paramdef int {
  p_default = 50000;
  p_descr = "Port for source of UDP data - i.e. this app.";
  p_help = "For output_mode = OUTPUT_UDP.";
} udp_source_port;

paramdef string {
  p_default = "192.168.1.255";
  p_descr = "Destination address for UDP.";
  p_help = "For output_mode = OUTPUT_UDP.";
} udp_dest_address;

paramdef int {
  p_default = 50000;
  p_descr = "Port for destination of UDP data.";
  p_help = "For output_mode = OUTPUT_UDP.";
} udp_dest_port;

